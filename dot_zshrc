# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
#################################################################################
# Helper Functions
#################################################################################

# safely source files
function safe_source() {
  if [[ -f "$1" ]]; then
	source "$1"
  fi
}


#################################################################################
# Keep at top of file
#################################################################################

eval "$($HOME/.cargo/bin/rtx activate zsh)"

export PATH="/usr/local/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"


#################################################################################
# Oh My Zsh
#################################################################################

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
safe_source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" 

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Path to oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# zsh plugins
plugins=(git zsh-syntax-highlighting)

# activate oh my zsh
safe_source "$ZSH/oh-my-zsh.sh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
safe_source "$HOME/.p10k.zsh"


#################################################################################
# User Configuration
#################################################################################

export KEYTIMEOUT=1

# Environment specific configuration
safe_source "$HOME/.zshextras.zshrc" 

ZSH_DISABLE_COMPFIX="true"

# set default editor to nvim
export EDITOR="nvim"
alias v="nvim"

export LC_ALL=en_US.UTF-8

# Pretty colors in the terminal
export TERM="xterm-256color"


#################################################################################
# Plugins / Tools
#################################################################################

# fast directory switching
# safe_source "$HOME/.config/scripts/z.sh"
eval "$(lua $HOME/.config/scripts/z.lua --init zsh)"

# fzf
safe_source "$HOME/.fzf.zsh"


#################################################################################
# Custom Functions
#################################################################################

# create or start a docker container based on provided name or .doctainer file
ds() {
    local container_name

	if [[ -n "$1" ]]; then
		container_name=$1
	elif [[ -f ".doctainer" ]]; then
		container_name=$(cat .doctainer)
	else
		echo "No container name provided and no .doctainer file found, using current folder name as container name."
		container_name=${PWD##*/}
	fi

    if docker ps -a --format '{{.Names}}' | grep -q "^$container_name$"; then
        docker start "$container_name"
        docker exec -it "$container_name" zsh
    else
        docker run -it -v $(pwd):/app --name "$container_name" nvim-config:latest
    fi
}

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"


#################################################################################
# Keep at bottom
#################################################################################

# warpify subshells
printf '\eP$f{"hook": "SourcedRcFileForWarp", "value": { "shell": "zsh" }}\x9c'
